{% from '@macros/components-local.twig' import testimonial %}
{% import '@macros/section-with-left-channel.twig' as section %}

{% set items = [
    { id: 1, text: 'Purpose' },
    { id: 2, text: 'Eligibility' },
    { id: 3, text: 'Nature of Grant' },
    { id: 4, text: 'General Information' },
    { id: 5, text: 'Apply' },
    { id: 6, text: 'Other Opportunities' },
    { id: 7, text: 'Timeline' },
] %}


<div>
    {% include '@localPartials/component-title.twig' with { text: '3.3 Left Nav' } only %}
</div>
<div x-data="{ entries: [] }"
    x-init="
        {# Find all elements to create a table-of-contents entry for, and set and save their ID and entry text #}
        {# TODO: Improve this selector #}
        const headers = document.querySelectorAll('.max-w-content-container-limit.px-6.mx-auto > h2');
        headers.forEach((header, index) => {
            if (!header.id) {
                header.id = 'toc-entry-' + index;
            }
            entries.push({
                id: header.id,
                text: header.innerText
            });
        });

        {# Wait until the DOM is updated by Alpine.js #}
        await $nextTick();

        {# Set each link target in the mobile nav menu #}
        document.querySelectorAll('#left-nav-link-container-mobile li > a').forEach((link, index) => {
            const target = '#' + entries[index].id;
            link.setAttribute('href', target);
        });

        {# Set each link target in the desktop nav menu #}
        document.querySelectorAll('#left-nav-link-container-desktop li > a').forEach((link, index) => {
            const target = '#' + entries[index].id;
            link.setAttribute('href', target);

        });
    "
    class="my-12">

    {{ section.start() }}
        {{ section.left_channel_start() }}

            {# Navigation menu (mobile) #}
            <div x-data="{
                    open: false,
                    goToContent() {
                        this.open = false;
                    }
                }"
                class="md:hidden relative z-20 bg-gray-50">
                {# The z-index of the button is set higher than the menu dropdown so that the button's box-shadow will overlap the dropdown #}
                <button @click="open = !open" :class="!open && 'shadow-md'" class="relative z-20 flex items-center gap-4 w-full py-4 px-5">
                    {# The height and width are set so that there are no minor size changes when the icon being displayed changes #}
                    <span class="h-6 w-8">
                        <span x-show="!open">
                            {% include '@icons/menu.twig' with { alt_text: 'open intra-page navigation' } only %}
                        </span>
                        <span x-show="open">
                            {% include '@icons/cross.twig' with { alt_text: 'close intra-page navigation' } only %}
                        </span>
                    </span>
                    <span class="text-xs font-bold">on this page</span>
                </button>
                <div class="relative">
                    <div x-cloak x-show="open" x-collapse class="absolute top-0 inset-x-0 z-20 overflow-hidden pb-4">
                        {# To have the shadow effect be shown on the bottom and not the top of this element: its parent `overflow` is set to `hidden`, and padding is added to the bottom of the parent #}
                        <nav class="bg-gray-50 pb-2 shadow-md">
                            <ol id="left-nav-link-container-mobile">
                                <template x-for="(entry, index) in entries">
                                    <li>
                                        <template x-if="index !== 0">
                                            <span class="block h-px mx-5 bg-gray-200"></span>
                                        </template>
                                        <a @click="goToContent()" x-text="entry.text" class="block text-xs py-3 px-5"></a>
                                    </li>
                                </template>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>

            {# Navigation menu (desktop) #}
            <div x-data="{
                    selectedItemIndex: 0,
                    selectItem(index) {
                        this.selectedItemIndex = index;
                    }
                }"
                class="hidden md:block">
                <nav class="border-r-2 border-gray-300">
                    <ol id="left-nav-link-container-desktop">
                        <template x-for="(entry, index) in entries">
                            <li>
                                <a @click=selectItem(index) x-text="entry.text" :class="selectedItemIndex === index && 'bg-cyan-50'" class="block py-3 px-6 hover:bg-cyan-50">
                                </a>
                            </li>
                        </template>
                    </ol>
                </nav>
            </div>

        {{ section.left_channel_end() }}

        {{ section.main_content_start() }}
            {{ testimonial('Est tation latine aliquip id, mea ad tale illud definitiones. Periculis omittantur necessitatibus eum ad, pro eripuit minimum comprehensam ne, usu cu stet prompta reformidans.', 'Companyname', 'Founder & CEO') }}
        {{ section.main_content_end() }}
    {{ section.end() }}
</div>
